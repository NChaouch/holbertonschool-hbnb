{
    "info": {
      "_postman_id": "1234-5678-abcd-efgh",
      "name": "HBnB API Tests v5",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": "Tests pour l'API HBnB v5"
    },
    "variable": [
      {
        "key": "baseUrl",
        "value": "http://127.0.0.1:5000/api/v1",
        "type": "string"
      }
    ],
    "item": [
      {
        "name": "Users",
        "item": [
          {
            "name": "Create User 1",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "var jsonData = pm.response.json();",
                    "if (jsonData) {",
                    "    pm.environment.set(\"userId1\", jsonData.user_id);",
                    "    pm.environment.set(\"authToken1\", jsonData.access_token);",
                    "}"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"first_name\": \"User1\",\n    \"last_name\": \"Test\",\n    \"email\": \"user1@example.com\",\n    \"password\": \"testpassword123\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/users",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "users"
                ]
              }
            }
          },
          {
            "name": "Create User 2",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "var jsonData = pm.response.json();",
                    "if (jsonData) {",
                    "    pm.environment.set(\"userId2\", jsonData.user_id);",
                    "    pm.environment.set(\"authToken2\", jsonData.access_token);",
                    "}"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"first_name\": \"User2\",\n    \"last_name\": \"Test\",\n    \"email\": \"user2@example.com\",\n    \"password\": \"testpassword123\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/users",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "users"
                ]
              }
            }
          },
          {
            "name": "Login User 1",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "var jsonData = pm.response.json();",
                    "if (jsonData && jsonData.access_token) {",
                    "    pm.environment.set(\"authToken1\", jsonData.access_token);",
                    "}"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"email\": \"user1@example.com\",\n    \"password\": \"testpassword123\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/auth/login",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "auth",
                  "login"
                ]
              }
            }
          },
          {
            "name": "Login User 2",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "var jsonData = pm.response.json();",
                    "if (jsonData && jsonData.access_token) {",
                    "    pm.environment.set(\"authToken2\", jsonData.access_token);",
                    "}"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"email\": \"user2@example.com\",\n    \"password\": \"testpassword123\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/auth/login",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "auth",
                  "login"
                ]
              }
            }
          }
        ]
      },
      {
        "name": "Places",
        "item": [
          {
            "name": "Create Place",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "var jsonData = pm.response.json();",
                    "if (jsonData && jsonData.place && jsonData.place.id) {",
                    "    pm.environment.set(\"placeId\", jsonData.place.id);",
                    "}"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken1}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"title\": \"Beautiful Apartment\",\n    \"description\": \"A lovely apartment in the heart of the city\",\n    \"price\": 150.00,\n    \"latitude\": 48.8566,\n    \"longitude\": 2.3522,\n    \"owner_id\": \"{{userId1}}\",\n    \"amenities\": []\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/places",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "places"
                ]
              }
            }
          }
        ]
      },
      {
        "name": "Reviews",
        "item": [
          {
            "name": "Create Review",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "var jsonData = pm.response.json();",
                    "if (jsonData && jsonData.review && jsonData.review.id) {",
                    "    pm.environment.set(\"reviewId\", jsonData.review.id);",
                    "}"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken2}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"text\": \"Amazing place!\",\n    \"rating\": 5,\n    \"place_id\": \"{{placeId}}\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/reviews",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "reviews"
                ]
              }
            }
          },
          {
            "name": "Get Review Details",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken2}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/reviews/{{reviewId}}",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "reviews",
                  "{{reviewId}}"
                ]
              }
            }
          },
          {
            "name": "Get Reviews by Place",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken2}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/places/{{placeId}}/reviews",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "places",
                  "{{placeId}}",
                  "reviews"
                ]
              }
            }
          },
          {
            "name": "Get Reviews by User",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken2}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/users/{{userId2}}/reviews",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "users",
                  "{{userId2}}",
                  "reviews"
                ]
              }
            }
          },
          {
            "name": "Update Review",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "var jsonData = pm.response.json();",
                    "if (jsonData && jsonData.review && jsonData.review.text) {",
                    "    pm.expect(jsonData.review.text).to.equal(\"Updated review\");",
                    "}"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "PATCH",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken2}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"text\": \"Updated review\",\n    \"rating\": 4\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/reviews/{{reviewId}}",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "reviews",
                  "{{reviewId}}"
                ]
              }
            }
          },
          {
            "name": "Delete Review",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 204\", function () {",
                    "    pm.response.to.have.status(204);",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "DELETE",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken2}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/reviews/{{reviewId}}",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "reviews",
                  "{{reviewId}}"
                ]
              }
            }
          },
          {
            "name": "Cannot create duplicate review",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "// Create first review",
                    "pm.sendRequest({",
                    "    url: pm.environment.get('baseUrl') + '/reviews',",
                    "    method: 'POST',",
                    "    header: {",
                    "        'Content-Type': 'application/json',",
                    "        'Authorization': 'Bearer ' + pm.environment.get('authToken2')",
                    "    },",
                    "    body: {",
                    "        mode: 'raw',",
                    "        raw: JSON.stringify({",
                    "            text: 'First review',",
                    "            rating: 4,",
                    "            place_id: pm.environment.get('placeId')",
                    "        })",
                    "    }",
                    "}, function (err, response) {",
                    "    if (err) { console.error(err); }",
                    "    else {",
                    "        pm.test('First review created', function() {",
                    "            pm.expect(response.code).to.be.oneOf([201]);",
                    "        });",
                    "    }",
                    "});",
                    "",
                    "// Try to create a second review on the same place",
                    "pm.sendRequest({",
                    "    url: pm.environment.get('baseUrl') + '/reviews',",
                    "    method: 'POST',",
                    "    header: {",
                    "        'Content-Type': 'application/json',",
                    "        'Authorization': 'Bearer ' + pm.environment.get('authToken2')",
                    "    },",
                    "    body: {",
                    "        mode: 'raw',",
                    "        raw: JSON.stringify({",
                    "            text: 'Second review',",
                    "            rating: 5,",
                    "            place_id: pm.environment.get('placeId')",
                    "        })",
                    "    }",
                    "}, function (err, response) {",
                    "    if (err) { console.error(err); }",
                    "    else {",
                    "        pm.test('Cannot create duplicate review', function() {",
                    "            pm.expect(response.body).to.contain('User has already reviewed this place');",
                    "        });",
                    "    }",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken2}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/reviews",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "reviews"
                ]
              }
            }
          }
        ]
      }
    ]
  }
